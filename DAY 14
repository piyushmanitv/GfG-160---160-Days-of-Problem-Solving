Implement Atoi


Difficulty: MediumAccuracy: 32.58%Submissions: 259K+Points: 4Average Time: 15m



Given a string s, the objective is to convert it into integer format without utilizing any built-in functions. Refer the below steps to know about atoi() function.

Cases for atoi() conversion:

Skip any leading whitespaces.
Check for a sign (‘+’ or ‘-‘), default to positive if no sign is present.
Read the integer by ignoring leading zeros until a non-digit character is encountered or end of the string is reached. If no digits are present, return 0.
If the integer is greater than 231 – 1, then return 231 – 1 and if the integer is smaller than -231, then return -231.










class Solution {
  public:
    int myAtoi(char *s) {
        // Your code here
        int i = 0, sign = 1;
        long result = 0;
        
        while(s[i] == ' ') i++;
        
        if(s[i] == '+' || s[i] == '-'){
            sign = (s[i] == '-') ? -1 : 1;
            i++;
        }
        while (s[i] >= '0' && s[i] <= '9'){
            result = result * 10 + (s[i] - '0');
            if(sign * result > INT_MAX) return INT_MAX;
            if(sign * result < INT_MIN) return INT_MIN;
            i++;
        }
        return (int)(sign * result);
    }
};
