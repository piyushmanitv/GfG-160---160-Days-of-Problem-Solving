Find the number of islands
Difficulty: MediumAccuracy: 42.12%Submissions: 248K+Points: 4Average Time: 20m
Given a grid of size n*m (n is the number of rows and m is the number of columns in the grid) consisting of 'W's (Water) and 'L's (Land). Find the number of islands.

Note: An island is either surrounded by water or the boundary of a grid and is formed by connecting adjacent lands horizontally or vertically or diagonally i.e., in all 8 directions.








class Solution {
  public:
    int countIslands(vector<vector<char>>& grid) {
        // Code here
        int dx[8] = {0, 0, 1, -1, 1, 1, -1, -1};
        int dy[8] = {1, -1, 0, 0, -1, 1, -1, 1};
        
        int n = grid.size();
        int m = grid[0].size();
        
        
        int cnt = 0;
        for(int i= 0; i < n; i++){
            for(int j = 0; j < m; j++){
                
                if(grid[i][j] == 'W')
                    continue;
                    
                queue<pair<int,int>>q; 
                q.push({i, j});
                
                grid[i][j] = 'W';
                cnt += 1;
                
                while(!q.empty()){
                    auto f = q.front();
                    q.pop();
                    
                    for(int k = 0; k < 8; k++){
                        int nx = f.first + dx[k];
                        int ny = f.second + dy[k];
                        
                        if(nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == 'L'){
                            q.push({nx, ny});
                            grid[nx][ny] = 'W';
                        }
                    }
                }
            }
        }
        
        return cnt;
    }
};

