Search Pattern (KMP-Algorithm)



Difficulty: HardAccuracy: 45.04%Submissions: 107K+Points: 8




Given two strings, one is a text string txt and the other is a pattern string pat. The task is to print the indexes
of all the occurrences of the pattern string in the text string. Use 0-based indexing while returning the indices. 
Note: Return an empty list in case of no occurrences of pattern













class Solution {
  public:
    vector<int> search(string& pat, string& txt) {
        // code here
        int m = pat.size(), n = txt.size();
        vector<int> lps(m, 0), result;
        
        for(int i = 1, len = 0; i < m;){
            if(pat[i] == pat[len]){
                lps[i++] = ++len;
            }
            else{
                if(len != 0) len = lps[len - 1];
                else lps[i++] = 0;
            }
        }
        
        for(int i = 0, j = 0; i < n;){
            if(pat[j] == txt[i]){
                i++; j++;
            }
            if(j == m){
                result.push_back(i - j);
                j = lps[j - 1];
            } else if(i < n && pat[j] != txt[i]){
                if(j != 0) j = lps[j - 1];
                else i++;
            }
        }
        return result;
    }
};
