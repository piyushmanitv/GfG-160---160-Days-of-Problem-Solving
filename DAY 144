Directed Graph Cycle
Difficulty: MediumAccuracy: 27.88%Submissions: 517K+Points: 4
Given a Directed Graph with V vertices (Numbered from 0 to V-1) and E edges, check whether it contains any cycle or not.
The graph is represented as a 2D vector edges[][], where each entry edges[i] = [u, v] denotes an edge from verticex u to v.






class Solution {
public:
    bool dfs(int node, vector<vector<int>>& adj, vector<bool>& vis, vector<bool>& recStack) {
        vis[node] = true;
        recStack[node] = true;
        for (int nbr : adj[node]) {
            if (!vis[nbr]) {
                if (dfs(nbr, adj, vis, recStack)) return true;
            } else if (recStack[nbr]) return true;
        }
        recStack[node] = false;
        return false;
    }

    bool isCyclic(int V, vector<vector<int>>& edges) {
        vector<vector<int>> adj(V);
        for (auto& e : edges) adj[e[0]].push_back(e[1]);
        vector<bool> vis(V, false), recStack(V, false);
        for (int i = 0; i < V; ++i) {
            if (!vis[i] && dfs(i, adj, vis, recStack)) return true;
        }
        return false;
    }
};
