Level order traversal
Difficulty: EasyAccuracy: 70.31%Submissions: 234K+Points: 2Average Time: 20m
Given a root of a binary tree with n nodes, the task is to find its level order traversal. Level order traversal of a tree is breadth-first traversal for the tree.












/* A binary tree Node
class Node {
  public:
    int data;
    Node* left;
    Node* right;

    // Constructor
    Node(int val) {
        data = val;
        left = nullptr;
        right = nullptr;
    }
};
*/

class Solution {
  public:
    vector<vector<int>> levelOrder(Node *root) {
        // Your code here
        vector<vector<int>> result;
        if(!root) return result;
        
        queue<Node*> q;
        q.push(root);
        
        while(!q.empty()){
            int levelSize = q.size();
            vector<int> level;
            
            for(int i = 0; i < levelSize; ++i){
                Node* node = q.front();
                q.pop();
                level.push_back(node->data);
                
                if(node->left) q.push(node->left);
                if(node->right) q.push(node->right);
            }
            result.push_back(level);
        }
        return result;
    }
};
