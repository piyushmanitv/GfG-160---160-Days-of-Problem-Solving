Permutations of a String
Difficulty: MediumAccuracy: 34.65%Submissions: 312K+Points: 4
Given a string s, which may contain duplicate characters, your task is to generate and return an array of all unique permutations of the string. You can return your answer in any order.









class Solution {
  public:
    vector<string> findPermutation(string &s) {
        // Code here there
        vector<string> result;
        sort(s.begin(), s.end());
        vector<bool> used(s.length(), false);
        string current;
        backtrack(s, used, current, result);
        return result;
    }
    
    void backtrack(string &s, vector<bool> &used, string &current, vector<string> &result){
        if(current.size() == s.size()){
            result.push_back(current);
            return;
        }
        
        for(int i = 0; i < s.size(); ++i){
            if(used[i]) continue;
            if(i > 0 && s[i] == s[i - 1] && ! used[i - 1]) continue;
            
            used[i] = true;
            current.push_back(s[i]);
            backtrack(s, used, current, result);
            current.pop_back();
            used[i] = false;
        }
    }
};
