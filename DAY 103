Histogram Max Rectangular Area
Difficulty: HardAccuracy: 32.12%Submissions: 197K+Points: 8
You are given a histogram represented by an array arr, where each element of the array denotes the height of the bars in the histogram. All bars have the same width of 1 unit.

Your task is to find the largest rectangular area possible in the given histogram, where the rectangle can be formed using a number of contiguous bars.





class Solution {
  public:
    int getMaxArea(vector<int> &arr) {
        // Your code here
        int n = arr.size();
        vector<int> prevSmaller (n, 0);
        prevSmaller[0] = -1;
        stack<int> st, stk;
        st.push(0);
        for(int i = 1; i < n; i++){
            while(st.empty() == false && arr[st.top()] >= arr[i]){
                st.pop();
            }
            if(st.empty()){
                prevSmaller[i] = -1;
            }else{
                prevSmaller[i] = st.top();
            }
            st.push(i);
        }
        
        vector<int> nextSmaller (n, 0);
        nextSmaller[n - 1] = n;
        
        stk.push(n - 1);
        for(int i = n - 2; i >= 0; i--){
            while(stk.empty() == false && arr[stk.top()] >= arr[i]){
                stk.pop();
            }
            if(stk.empty()){
                nextSmaller[i] = n;
            }else{
                nextSmaller[i] = stk.top();
            }
            stk.push(i);
        }
        int ans = 0;
        for(int i = 0; i < n; i++){
            ans = max(ans, arr[i]*(nextSmaller[i] - prevSmaller[i] - 1));
        }
        return ans;
    }
};
